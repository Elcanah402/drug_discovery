{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "6be18cef-f7b7-4e78-82ab-cd525e6c8d23",
   "metadata": {},
   "outputs": [],
   "source": [
    "import os\n",
    "os.chdir('C:\\\\Users\\\\Admin\\\\Desktop\\\\VIRTUAL SCREENING\\\\ROC AND VIRTUAL SCREENING')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4ac7e8c0-164f-4bef-9d6a-352be869213c",
   "metadata": {},
   "source": [
    "## Extract the molecule name of Actives and inactives and represent the active 1 and inactive as 0"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "4056c50f-fcac-4aa9-8112-497ffc071b02",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "CSV file created: molecule_activity_labels.csv\n"
     ]
    }
   ],
   "source": [
    "import pandas as pd\n",
    "\n",
    "def extract_molecule_names(mol2_file):\n",
    "    \"\"\"Extract molecule names from a .mol2 file.\"\"\"\n",
    "    molecule_names = []\n",
    "    with open(mol2_file, 'r') as file:\n",
    "        for line in file:\n",
    "            if line.startswith(\"@<TRIPOS>MOLECULE\"):\n",
    "                # The next line is the name of the molecule\n",
    "                molecule_name = next(file).strip()\n",
    "                molecule_names.append(molecule_name)\n",
    "    return molecule_names\n",
    "\n",
    "# Specify the names of the active and decoy .mol2 files\n",
    "active_mol2_file = 'actives_final.mol2'  # Replace with the name of your active .mol2 file\n",
    "decoy_mol2_file = 'decoys_final.mol2'    # Replace with the name of your decoy .mol2 file\n",
    "\n",
    "# Extract active molecule names and label them as 1\n",
    "active_molecules = extract_molecule_names(active_mol2_file)\n",
    "active_molecules = [(name, 1) for name in active_molecules]\n",
    "\n",
    "# Extract decoy molecule names and label them as 0\n",
    "decoy_molecules = extract_molecule_names(decoy_mol2_file)\n",
    "decoy_molecules = [(name, 0) for name in decoy_molecules]\n",
    "\n",
    "# Combine active and decoy molecules\n",
    "all_molecules = active_molecules + decoy_molecules\n",
    "\n",
    "# Create a DataFrame and save it to CSV\n",
    "df = pd.DataFrame(all_molecules, columns=[\"Molecule_Name\", \"Active_Status\"])\n",
    "df.to_csv(\"molecule_activity_labels.csv\", index=False)\n",
    "\n",
    "print(\"CSV file created: molecule_activity_labels.csv\")\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "637b5b5e-0f3d-4758-8a7c-90ac72d223b5",
   "metadata": {},
   "source": [
    "## Save the actives and inactives in smiles format if you want the database to be constructed from 1D molecules. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "id": "285ccffe-87ad-4e8b-84c2-10a6a1b51fe0",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Conversion complete! SMILES saved in: output_molecules.smi\n"
     ]
    }
   ],
   "source": [
    "from rdkit import Chem\n",
    "\n",
    "def convert_mol2_to_smiles(mol2_file, output_smi_file):\n",
    "    # Open the output file to write the SMILES\n",
    "    with open(output_smi_file, 'w') as output_file:\n",
    "        # Read the .mol2 file\n",
    "        with open(mol2_file, 'r') as infile:\n",
    "            mol2_content = infile.read()\n",
    "        \n",
    "        # Split the content based on the delimiter for each molecule in mol2 files\n",
    "        molecules = mol2_content.split(\"@<TRIPOS>MOLECULE\")\n",
    "        \n",
    "        # Loop over each molecule block (skipping the first empty split)\n",
    "        for mol_block in molecules[1:]:\n",
    "            # Add back the delimiter as it's removed during split\n",
    "            mol_block = \"@<TRIPOS>MOLECULE\" + mol_block\n",
    "            # Create RDKit molecule from mol2 block\n",
    "            mol = Chem.MolFromMol2Block(mol_block, sanitize=False, removeHs=False)\n",
    "            if mol is None:\n",
    "                continue  # Skip if molecule could not be read\n",
    "\n",
    "            # Get the molecule name/title (it should be the first line after @<TRIPOS>MOLECULE)\n",
    "            lines = mol_block.splitlines()\n",
    "            molecule_name = lines[1].strip() if len(lines) > 1 else \"Unknown\"\n",
    "\n",
    "            # Convert the molecule to SMILES\n",
    "            try:\n",
    "                smiles = Chem.MolToSmiles(mol, isomericSmiles=True)\n",
    "            except:\n",
    "                print(f\"Skipping molecule '{molecule_name}' due to conversion error\")\n",
    "                continue\n",
    "\n",
    "            # Write SMILES and the molecule name to the output file\n",
    "            output_file.write(f\"{smiles} {molecule_name}\\n\")\n",
    "    \n",
    "    print(f\"Conversion complete! SMILES saved in: {output_smi_file}\")\n",
    "\n",
    "# Specify the MOL2 file and the output SMI file\n",
    "input_mol2_file = 'Active_Inactive.mol2'  # Replace with your MOL2 file name\n",
    "output_smi_file = 'output_molecules.smi'  # Output file to save SMILES\n",
    "\n",
    "# Run the conversion function\n",
    "convert_mol2_to_smiles(input_mol2_file, output_smi_file)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8e9f1378-3755-4733-9330-2a2715ba62de",
   "metadata": {},
   "source": [
    "### Extract the Molecule name and RMSD value from the pharmacophore screening results  "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "id": "f3975bcc-7c0f-4d59-bab7-1d5e9de4c293",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Extraction complete! Data saved to extracted_rmsd_data.csv\n"
     ]
    }
   ],
   "source": [
    "import csv\n",
    "\n",
    "def extract_id_rmsd_from_sdf(sdf_file, output_csv_file):\n",
    "    # Open the SDF file to read and the CSV file to write the data\n",
    "    with open(sdf_file, 'r') as infile, open(output_csv_file, 'w', newline='') as csvfile:\n",
    "        # Create a CSV writer object\n",
    "        csv_writer = csv.writer(csvfile)\n",
    "        # Write header to CSV\n",
    "        csv_writer.writerow(['ID', 'RMSD'])\n",
    "        \n",
    "        current_id = None\n",
    "        rmsd_value = None\n",
    "\n",
    "        # Read the SDF file line by line\n",
    "        for line in infile:\n",
    "            line = line.strip()\n",
    "\n",
    "            # Detect start of a new molecule block (the first non-empty line before any tags)\n",
    "            if line and not line.startswith('>') and current_id is None:\n",
    "                current_id = line  # Assume this is the molecule ID or name\n",
    "\n",
    "            # Identify and extract the RMSD value\n",
    "            elif line.startswith(\"> <rmsd>\"):\n",
    "                rmsd_value = infile.readline().strip()\n",
    "\n",
    "            # If we reach the end of a molecule block, write to CSV and reset\n",
    "            elif line == \"$$$$\":\n",
    "                if current_id and rmsd_value:\n",
    "                    csv_writer.writerow([current_id, rmsd_value])\n",
    "                # Reset for next molecule\n",
    "                current_id = None\n",
    "                rmsd_value = None\n",
    "\n",
    "    print(f\"Extraction complete! Data saved to {output_csv_file}\")\n",
    "\n",
    "# Specify the input SDF file and output CSV file names\n",
    "input_sdf_file = 'query_results.sdf'  # Replace with your SDF file name\n",
    "output_csv_file = 'extracted_rmsd_data.csv'  # Output CSV file to save the extracted data\n",
    "\n",
    "# Run the extraction function\n",
    "extract_id_rmsd_from_sdf(input_sdf_file, output_csv_file)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fdcbabaa-64db-4a76-9dfb-0d2844c446ed",
   "metadata": {},
   "source": [
    "### Generate the final ROC plot and EF"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "39aac017-4c87-4430-81cb-2016a54f3cb7",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Extraction complete! Data saved to extracted_rmsd_data.csv\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1400x600 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import csv\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "from sklearn.metrics import roc_curve, auc\n",
    "\n",
    "# Step 1: Extract molecule ID and RMSD from the SDF file and save to CSV\n",
    "def extract_id_rmsd_from_sdf(sdf_file, output_csv_file):\n",
    "    with open(sdf_file, 'r') as infile, open(output_csv_file, 'w', newline='') as csvfile:\n",
    "        csv_writer = csv.writer(csvfile)\n",
    "        csv_writer.writerow(['ID', 'RMSD'])\n",
    "        \n",
    "        current_id = None\n",
    "        rmsd_value = None\n",
    "\n",
    "        for line in infile:\n",
    "            line = line.strip()\n",
    "\n",
    "            if line and not line.startswith('>') and current_id is None:\n",
    "                current_id = line  # Assume this is the molecule ID or name\n",
    "\n",
    "            elif line.startswith(\"> <rmsd>\"):\n",
    "                rmsd_value = infile.readline().strip()\n",
    "\n",
    "            elif line == \"$$$$\":\n",
    "                if current_id and rmsd_value:\n",
    "                    csv_writer.writerow([current_id, rmsd_value])\n",
    "                current_id = None\n",
    "                rmsd_value = None\n",
    "\n",
    "    print(f\"Extraction complete! Data saved to {output_csv_file}\")\n",
    "\n",
    "# Step 2: Perform data analysis and visualization (Top 25%)\n",
    "def analyze_rmsd_data(all_molecules_file, extracted_rmsd_file):\n",
    "    # Load all molecules (before screening)\n",
    "    all_molecules = pd.read_csv(all_molecules_file)\n",
    "\n",
    "    # Load hits (after screening)\n",
    "    hits = pd.read_csv(extracted_rmsd_file)\n",
    "\n",
    "    # Merge hits with all molecules to get the 'Status' for each hit\n",
    "    merged_hits = hits.merge(all_molecules, on='ID')\n",
    "\n",
    "    # Convert RMSD to float if needed\n",
    "    merged_hits['RMSD'] = pd.to_numeric(merged_hits['RMSD'], errors='coerce')\n",
    "    merged_hits = merged_hits.dropna(subset=['RMSD'])\n",
    "\n",
    "    # Sort hits by RMSD values (assuming lower RMSD is better)\n",
    "    sorted_hits = merged_hits.sort_values(by='RMSD')\n",
    "\n",
    "    # Determine the top 25% of the compounds based on RMSD\n",
    "    total_molecules = len(all_molecules)\n",
    "    top_25_percent = max(1, int(0.25 * total_molecules))  # Ensure at least 1 compound is selected\n",
    "    top_hits = sorted_hits.head(top_25_percent)\n",
    "\n",
    "    # Extract the true labels and scores for the top 25% hits\n",
    "    y_true_top = top_hits['Status']\n",
    "    y_scores_top = top_hits['RMSD']\n",
    "\n",
    "    # Calculate the ROC curve using the top 25% hits\n",
    "    fpr_top, tpr_top, thresholds_top = roc_curve(y_true_top, -y_scores_top)  # Using negative RMSD because lower is better\n",
    "    roc_auc_top = auc(fpr_top, tpr_top)\n",
    "\n",
    "    # Calculate Enrichment Factor (EF) for the top 25%\n",
    "    num_actives_total = all_molecules['Status'].sum()\n",
    "    num_actives_top = top_hits['Status'].sum()\n",
    "\n",
    "    if num_actives_total > 0 and top_25_percent > 0:\n",
    "        ef_25_percent = (num_actives_top / top_25_percent) / (num_actives_total / total_molecules)\n",
    "    else:\n",
    "        ef_25_percent = float('nan')  # Handle edge case if no actives are present\n",
    "\n",
    "    # Plot the ROC curve and EF\n",
    "    plt.figure(figsize=(14, 6))\n",
    "\n",
    "    # Subplot 1: ROC Curve for Top 25%\n",
    "    plt.subplot(1, 2, 1)\n",
    "    plt.plot(fpr_top, tpr_top, color='darkorange', lw=2, label=f'25% ROC curve (AUC = {roc_auc_top:.2f})')\n",
    "    plt.plot([0, 1], [0, 1], color='navy', lw=2, linestyle='--')\n",
    "    plt.xlim([0.0, 1.0])\n",
    "    plt.ylim([0.0, 1.0])\n",
    "    plt.xlabel('False Positive Rate')\n",
    "    plt.ylabel('True Positive Rate')\n",
    "    plt.title('Top 25% ROC Curve')\n",
    "    plt.legend(loc=\"lower right\")\n",
    "\n",
    "    # Subplot 2: Enrichment Factor\n",
    "    plt.subplot(1, 2, 2)\n",
    "    plt.bar(['Top 25%'], [ef_25_percent], color='blue')\n",
    "    plt.ylim(0, max(ef_25_percent, 1) + 1)\n",
    "    plt.ylabel('Enrichment Factor')\n",
    "    plt.title('Enrichment Factor at Top 25%')\n",
    "    for i, v in enumerate([ef_25_percent]):\n",
    "        plt.text(i, v + 0.05, f'{v:.2f}', ha='center', va='bottom')\n",
    "\n",
    "    plt.tight_layout()\n",
    "    plt.show()\n",
    "\n",
    "# Step 3: Specify input/output file names and run both extraction and analysis\n",
    "input_sdf_file = 'query_results.sdf'  # Replace with your SDF file name\n",
    "extracted_rmsd_csv_file = 'extracted_rmsd_data.csv'  # Output CSV file to save the extracted data\n",
    "all_molecules_file = 'All_MoleculesFinal.csv'  # CSV file containing all molecules with their Status\n",
    "\n",
    "# Run the extraction function\n",
    "extract_id_rmsd_from_sdf(input_sdf_file, extracted_rmsd_csv_file)\n",
    "\n",
    "# Run the analysis function\n",
    "analyze_rmsd_data(all_molecules_file, extracted_rmsd_csv_file)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "ccc3642c-1c8a-4e44-aa83-dd2feea34b39",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Extraction complete! Data saved to extracted_rmsd_data.csv\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1400x600 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import csv\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "from sklearn.metrics import roc_curve, auc\n",
    "\n",
    "# Step 1: Extract molecule ID and RMSD from the SDF file and save to CSV\n",
    "def extract_id_rmsd_from_sdf(sdf_file, output_csv_file):\n",
    "    with open(sdf_file, 'r') as infile, open(output_csv_file, 'w', newline='') as csvfile:\n",
    "        csv_writer = csv.writer(csvfile)\n",
    "        csv_writer.writerow(['ID', 'RMSD'])\n",
    "        \n",
    "        current_id = None\n",
    "        rmsd_value = None\n",
    "\n",
    "        for line in infile:\n",
    "            line = line.strip()\n",
    "\n",
    "            if line and not line.startswith('>') and current_id is None:\n",
    "                current_id = line  # Assume this is the molecule ID or name\n",
    "\n",
    "            elif line.startswith(\"> <rmsd>\"):\n",
    "                rmsd_value = infile.readline().strip()\n",
    "\n",
    "            elif line == \"$$$$\":\n",
    "                if current_id and rmsd_value:\n",
    "                    csv_writer.writerow([current_id, rmsd_value])\n",
    "                current_id = None\n",
    "                rmsd_value = None\n",
    "\n",
    "    print(f\"Extraction complete! Data saved to {output_csv_file}\")\n",
    "\n",
    "# Step 2: Perform data analysis and visualization (Top 15%)\n",
    "def analyze_rmsd_data(all_molecules_file, extracted_rmsd_file):\n",
    "    # Load all molecules (before screening)\n",
    "    all_molecules = pd.read_csv(all_molecules_file)\n",
    "\n",
    "    # Load hits (after screening)\n",
    "    hits = pd.read_csv(extracted_rmsd_file)\n",
    "\n",
    "    # Merge hits with all molecules to get the 'Status' for each hit\n",
    "    merged_hits = hits.merge(all_molecules, on='ID')\n",
    "\n",
    "    # Convert RMSD to float if needed\n",
    "    merged_hits['RMSD'] = pd.to_numeric(merged_hits['RMSD'], errors='coerce')\n",
    "    merged_hits = merged_hits.dropna(subset=['RMSD'])\n",
    "\n",
    "    # Sort hits by RMSD values (assuming lower RMSD is better)\n",
    "    sorted_hits = merged_hits.sort_values(by='RMSD')\n",
    "\n",
    "    # Determine the top 15% of the compounds based on RMSD\n",
    "    total_molecules = len(all_molecules)\n",
    "    top_15_percent = max(1, int(0.15 * total_molecules))  # Ensure at least 1 compound is selected\n",
    "    top_hits = sorted_hits.head(top_15_percent)\n",
    "\n",
    "    # Extract the true labels and scores for the top 15% hits\n",
    "    y_true_top = top_hits['Status']\n",
    "    y_scores_top = top_hits['RMSD']\n",
    "\n",
    "    # Calculate the ROC curve using the top 15% hits\n",
    "    fpr_top, tpr_top, thresholds_top = roc_curve(y_true_top, -y_scores_top)  # Using negative RMSD because lower is better\n",
    "    roc_auc_top = auc(fpr_top, tpr_top)\n",
    "\n",
    "    # Calculate Enrichment Factor (EF) for the top 15%\n",
    "    num_actives_total = all_molecules['Status'].sum()\n",
    "    num_actives_top = top_hits['Status'].sum()\n",
    "\n",
    "    if num_actives_total > 0 and top_15_percent > 0:\n",
    "        ef_15_percent = (num_actives_top / top_15_percent) / (num_actives_total / total_molecules)\n",
    "    else:\n",
    "        ef_15_percent = float('nan')  # Handle edge case if no actives are present\n",
    "\n",
    "    # Plot the ROC curve and EF\n",
    "    plt.figure(figsize=(14, 6))\n",
    "\n",
    "    # Subplot 1: ROC Curve for Top 15%\n",
    "    plt.subplot(1, 2, 1)\n",
    "    plt.plot(fpr_top, tpr_top, color='darkorange', lw=2, label=f'15% ROC curve (AUC = {roc_auc_top:.2f})')\n",
    "    plt.plot([0, 1], [0, 1], color='navy', lw=2, linestyle='--')\n",
    "    plt.xlim([0.0, 1.0])\n",
    "    plt.ylim([0.0, 1.0])\n",
    "    plt.xlabel('False Positive Rate')\n",
    "    plt.ylabel('True Positive Rate')\n",
    "    plt.title('Top 15% ROC Curve')\n",
    "    plt.legend(loc=\"lower right\")\n",
    "\n",
    "    # Subplot 2: Enrichment Factor\n",
    "    plt.subplot(1, 2, 2)\n",
    "    plt.bar(['Top 15%'], [ef_15_percent], color='blue')\n",
    "    plt.ylim(0, max(ef_15_percent, 1) + 1)\n",
    "    plt.ylabel('Enrichment Factor')\n",
    "    plt.title('Enrichment Factor at Top 15%')\n",
    "    for i, v in enumerate([ef_15_percent]):\n",
    "        plt.text(i, v + 0.05, f'{v:.2f}', ha='center', va='bottom')\n",
    "\n",
    "    plt.tight_layout()\n",
    "    plt.show()\n",
    "\n",
    "# Step 3: Specify input/output file names and run both extraction and analysis\n",
    "input_sdf_file = 'query_results.sdf'  # Replace with your SDF file name\n",
    "extracted_rmsd_csv_file = 'extracted_rmsd_data.csv'  # Output CSV file to save the extracted data\n",
    "all_molecules_file = 'All_MoleculesFinal.csv'  # CSV file containing all molecules with their Status\n",
    "\n",
    "# Run the extraction function\n",
    "extract_id_rmsd_from_sdf(input_sdf_file, extracted_rmsd_csv_file)\n",
    "\n",
    "# Run the analysis function\n",
    "analyze_rmsd_data(all_molecules_file, extracted_rmsd_csv_file)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "21f0ae37-4c79-45db-b962-9a727b708f4b",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Extraction complete! Data saved to extracted_rmsd_data.csv\n"
     ]
    },
    {
     "data": {
      "image/png": "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ptYMUovFkqh5fOTIkUTLFTRv3lwxMTE2S149LF9S2Ro3bqzt27dbm7QPLFq0SG5ubk/8oFyLxSIHBwfZ29tba3fu3NHixYuTnS2lSpUqpYIFC2rZsmU2nxFu3bqloKAg1apVS25ubjbnLF261GZ71apViouLU4MGDf51HkkqWLCgqlevriVLltg89G///v06depUkg+LlqTY2Fi98MILmjhxovz8/CTd/0yQGp+FgKyKmbYAMrTevXvr888/V58+ffTHH3+ofPny2rNnj6ZMmaIWLVroueeeszk+b968atSokd544w25u7tr5syZOnnyZKJlA5Jy/PhxHT9+XNL931Dfvn1ba9askST5+/vL399f0v2BZJMmTTR06FBFR0erRIkSWr58ubZs2aIlS5bYDOQeuHTpksaNG6dZs2bJy8tLkpQjRw7VqlVL48aN0xtvvKFdu3YpNDQ0USM6Jd+rjz76SB988IGGDx8uT09P5cyZU2vXrlWrVq1UtWpVjRs3ThUrVlR0dLRWrlyppUuXqmvXrho3bpz1Ol5eXgoODlarVq1UuXJljRgxQrVq1ZKTk5NOnz6tJUuW6JdffnnogEy6P1t1xYoV6tq1qypVqqQRI0aocuXK1u/zvHnzZBiG2rdvL0nq1auXevbsqWHDhqljx476888/NW3aNOssluSyt7e3fh88PT3VoUMH6/f7gU8++UTPPvus6tatq6FDh6po0aK6ceOGzpw5o40bN2r79u0pek0AAGCeX3/9VXFxcYnqxYsXT/E4IiWKFi2qV199VW+//bbu3Lmjbt26ycvLS8ePH9fly5c1adKkNHvtpNSpU0eDBw9Wv379FBISonr16snd3V0RERHas2ePypcvr6FDh6bomsWLF5erq6uWLl2qMmXKyMPDQ76+vtZlBlKqVatWevvttzVx4kTVr19fp06d0uTJk1WsWDGbn2G3bt00f/58DRkyRKdOnVLDhg2VkJCgH3/8UWXKlLHeCVa+fHnt2LFDGzdulI+Pj3LkyKFSpUpp4sSJ+vrrr9WwYUO9+eabyp07t5YuXapNmzZp2rRpicaGydWyZUt99NFH6t69uwYPHqwrV67ogw8+SHIWc/ny5bVixQqtXLlSfn5+cnFxeaLGuZ2dnaZNm6YePXqoVatWeuGFFxQbG6v3339f169f19SpUxOds3btWjk4OKhJ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8uTJioiIULly5bR582YVKVJEkhQREaGwsDDr8X379tWNGzf02Wef6eWXX1bOnDnVqFEjvffee2a9BQAAkMpmzWqpmjW/Uq5crgoODlClSgXMjgQAAAAA6cpiPGxdgSwqOjpaXl5eioqKYqkEAAAyqF27/lTp0nnl7e1udhSYJHq6r7xGRzBmSwHGuQAAABlfcsdspq1pCwAAcO3aHY0fv02xsXE29Xr1itCwBQAAAJBtmbo8AgAAyL5OnLikNm1W6MyZq7p27Y7mzGkti8VidiwAAAAAMB0zbQEAQLr7+uvfVKPGVzpz5qokaf36U4qIuGlyKgAAAADIGGjaAgCAdGMYhgIDd6tNm+W6ceOuJKlixfwKCRkkX98cJqcDAAAAgIyB5REAAEC6uH37ngYM2KAVK3611jp39tf8+W3l7u5kYjIAAAAAyFho2gIAgDR37lyU2rVbqZ9/jrDW3n67oV57rS7r2AIAAADAP9C0BQAAaeq3366obt35unjxliTJw8NJS5a0V9u2pU1OBgAAAAAZE2vaAgCANFWsWE6VKZNXkuTnl0v79g2gYQsAAAAAj0DTFgAApClHR3utXt1ZffpU1IEDA1WunLfZkQAAAAAgQ6NpCwAAUtXly7d18uRlm1q+fO5asKCd8uRxMykVAAAAAGQeNG0BAECqOXr0gp555ks1b75Uly/fNjsOAAAAAGRKNG0BAECqWLv2hGrVmqs//riuP/64ruHDN5sdCQAAAAAyJZq2AADgX0lIMDRp0g517LhKt27dkyRVreqjDz9sanIywDyBgYF65plnlCNHDnl7e6tdu3Y6derUI8/ZsWOHLBZLoq+TJ0+mU2oAAABkFA5mBwAAAJnXzZt31afPeq1de8Ja6969vL76qrVcXR1NTAaYa+fOnRo+fLieeeYZxcXF6bXXXlPTpk11/Phxubu7P/LcU6dOydPT07qdL1++tI4LAACADIamLQAAeCKhodfUtu0KHT16UZJksUjvvfecxo6tLYvFYnI6wFxbtmyx2Z4/f768vb31008/qV69eo8819vbWzlz5kzDdAAAAMjoWB4BAACk2Pffh+qZZ760Nmy9vJy1aVN3jRtXh4YtkISoqChJUu7cuR97bOXKleXj46PGjRvr+++/f+hxsbGxio6OtvkCAABA1kDTFgAApNixY5d05codSVLJknn0448D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3OxrmR8XLlwwzs7OZunSpda2U6dOGQcHB/Pf//432+Puvvtu6+fguvr165uXX37ZGJOzz/V19913n3n99dezPdfNvvcT3vMt9DlbaVMU89ysSGxsbGxsbGxsJXsrSjmdsznZq1hcWp0/f0VBQV9p3brj1rZnn22p999/SM7OjnZMBgAlzJctpcvxRX9eDx/piYL51f+YmBjFx8erS5cu1jZXV1d17NhRW7du1fDhw9W0aVN9/PHHOn/+vI4fP64rV67ozjvvVGRkpHbt2qW5c+fm6dwXLlyw3qPV2dlZknTu3Dl99913euutt+Tu7m7T38fHRwMHDlR4eLhCQkK0e/du7d+/X4sXL85yBWrFihWzPfcrr7yiTz75RO+9957uvfdexcXF6dChQ7nKn5SUpKlTp+rTTz9V5cqVVb16dU2aNEkrVqzQ0KFDJV1bgbts2TJNmTJFkrR371517dpV//73v7VgwQL99ddfGjVqlEaNGqXQ0NAszxMZGaly5cqpQYMGmfYtWLBAAwYMkLOzswYMGKAFCxaoQ4cOuboOSQoLC1P58uU1cuTILPff7GvZsGFDnTx5Mtv9/v7+Wd4CQ5KioqKUmppq8/nz8/NTo0aNtHXrVnXt2jXTMSkpKYqKitLLL79s096lSxdt3bpVUs4+19fdfffdmW6tAAAAAODWKNoWoAMH/tLDDy/VsWPXfrXUyclBH33UTcOHt7RzMgAogS7HS5dO2TtFvsTHXys6e3t727R7e3tbC3Fdu3bVE088oVatWsnd3V2fffaZPDw89Oyzz2rRokWaO3euPvzwQ1WpUkUff/yxGjZsmO35EhISVL58eRljlJSUJEnq1auX6tevL0k6evSojDFZFiglqUGDBjp//rz++usvHT16VJKsx+bUxYsX9f777+ujjz7SU089JUmqU6eO7r333ly9T2pqqkJCQtS0aVNrW1BQkBYvXmwt2q5fv17nz59Xv379JEkzZszQ448/rjFjxkiS6tatqw8++EAdO3bU3Llz5ebmluk8J06ckLe3d6bCdGJiolasWGEtVD7xxBNq166dPvzwQ3l6eubqWo4eParatWtbi+e5sXbtWqWmpma7/2bvGR8fLxcXF91222027d7e3tbP5o3OnDmj9PT0LD+z14/Jyef6uttvv10nTpzINiMAAACArFG0LUAxMef166/XCrZVqpTTihX91aGDv51TAUAJ5eFTas57473MjTE2bcHBwQoODrZ53alTJzk7O+vNN9/U3r179Z///EeDBg1SVFRUtuepUKGCdu3apbS0NG3atEkzZszQvHnzcpzTGGPN+/f/z42DBw8qOTlZDz74YK6Ou5GLi4uaNGli0zZw4EC1adNGf/zxh/z8/BQWFqbu3btbi5JRUVE6duyYwsLCrMcYY5SRkaGYmJgsi9VXrlzJspi7ePFi1a5d21o0btasmWrXrq2lS5fqmWeeydW13DjeueHvX/DziJzkudVnNqd93N3drf+AAAAAACDnKNoWoB49AvT22w9q6dJ9+vrrx+TvX9HekQCg5CqgWxTYk4/PtQJwfHy8fH19re2nT5/OtErxukOHDiksLEzR0dFauHChOnTooKpVq6p///765z//qcTExGxXejo4OOjOO++UdG2FbHx8vIKCgrR582ZJ0p133imLxaIDBw6od+/eWZ77tttuU5UqVRQQECDpWhG2WbNmOb7mG2+7kFVG6X8FYklZriR1d3fPVAC8++67VadOHS1dulTPPvusIiIibG57kJGRoeHDh2v06NGZ3q9mzZpZ5qlSpYrOnz+fqX3hwoXav3+/nJz+N1XKyMjQggULrEVbT09PJSQkZDr2woULkiQvLy9JUkBAgCIjI5Wamprr1bb5uT2Cj4+PUlJSdP78eZvVtqdPn1bbtm2zPKZKlSpydHTMtBL375/Z3Hyuz507p6pVq97kCgEAAABkJfNN6pBjyclpNn/plKSXXmqnbduGUrAFAKhWrVry8fHRunXrrG0pKSnatGlTlkUzY4yeeeYZzZw5U+XLl1d6erq1oHn9vxkZGTk+/9ixY7Vnzx5FRERIkipXrqzOnTsrJCREV65csekbHx+vsLAwBQUFyWKxqFmzZrrrrrs0c+bMLM95vTB5o7p168rd3V3r16/Pcv/1Al5cXJy1bffu3Tm+pscff1xhYWFavXq1HBwc1KNHD+u+Fi1aaP/+/brzzjszbS4uLlm+X/PmzRUfH29TuN27d6927typjRs3avfu3dZt8+bN2rFjh/bt2yfpWmH8999/z1Tg3LFjh00B/fHHH9elS5cUEhKSZYbsvpbStdsj/D3DjdvatWuzPTYwMFDOzs42n7+4uDjt27cv26Kti4uLAgMDbY6RpHXr1lmPyc3net++fWre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5qbAwEBt2bLlpv03bdqkwMBAubm5qXbt2po3b14RJUVByM14r1y5Up07d1bVqlXl6empNm3a6LvvvivCtMiv3H5/X/fTTz/JyclJzZo1K9yAKHC5HfPk5GRNnDhR/v7+cnV1VZ06dbRw4cIiSov8yu14h4WFqWnTpipXrpx8fX01ZMgQnT17tojSIq82b96snj17ys/PTxaLRatWrbrlMczXAMD+LBbLTbfBgwcX+Dlz8jPDGKPg4GD5+fnJ3d1d9913n/bv32/TZ9y4capUqZJq1qyppUuX2uxbtmyZevbsWeDZASA/Sl3RNjw8XGPGjNHEiRMVHR2t9u3bq1u3boqNjc2yf0xMjLp376727dsrOjpar776qkaPHq0VK1YUcXLkRW7He/PmzercubPWrl2rqKgo3X///erZs6eio6OLODnyIrfjfV1CQoIGDRqkBx98sIiSoqDkZcz79++v9evXa8GCBTp8+LCWLFmi+vXrF2Fq5FVuxzsyMlKDBg3S0KFDtX//fi1fvlw7duzQsGHDijg5cuvy5ctq2rSpPvrooxz1Z74GAMVDXFycdZs9e7Y8PT1t2t5///0CP2dOfma88847mjVrlj766CPt2LFDPj4+6ty5sy5evChJWr16tRYvXqzvv/9e06dPt/lH3gsXLmjixImaM2dOgWcHgHwxpczdd99tRowYYdNWv3598/LLL2fZf8KECaZ+/fo2bcOHDzf33HNPoWVEwcnteGflrrvuMpMnTy7oaCgEeR3voKAg89prr5lJkyaZpk2bFmJCFLTcjvm3335rvLy8zNmzZ4siHgpYbsd7xowZpnbt2jZtH3zwgalevXqhZUTBk2QiIiJu2of5GgAUP6GhocbLy8umLSQkxNSuXds4OzubgIAA8/nnn9vsl2RCQkLMQw89ZNzc3Mwdd9xhli1bluNzZvUzIyMjw/j4+Jhp06ZZ265evWq8vLzMvHnzjDHGTJ8+3QQFBVn3V6tWzfz888/GGGOefvppM2vWrBxnAICiUqpW2qakpCgqKkpdunSxae/SpYu2bt2a5THbtm3L1L9r167auXOnUlNTCy0r8i8v432jjIwMXbx4UZUqVSqMiChAeR3v0NBQ/frrr5o0aVJhR0QBy8uYf/PNN2rZsqXeeecd3X777QoICND48eN15cqVooiMfMjLeLdt21a///671q5d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IxRtAQAAAAAAAKAYoWgLAAAAAAAAAMUIRVsAAAAAAAAAKEYo2gIAAAAAAABAMULRFgAkLVq0SBUrVrR3jDy74447NHv27Jv2CQ4OVrNmzYokDwAAAAAAyDuKtgBKjcGDB8tisWTajh07Zu9oWrRokU0mX19f9e/fXzExMQXy/jt27NAzzzxjfW2xWLRq1SqbPuPHj9f69esL5HzZufE6vb291bNnT+3fvz/X71OSi+gAAAAAAOQHRVsApcpDDz2kuLg4m61WrVr2jiVJ8vT0VFxcnP744w8tXrxYu3fvVq9evZSenp7v965atarKlSt30z7ly5dX5cqV832uW/n7da5Zs0aXL19Wjx49lJKSUujnBgAAAACgNKBoC6BUcXV1lY+Pj83m6OioWbNmqXHjxvLw8FCNGjU0cuRIXbp0Kdv32bNnj+6//35VqFBBnp6eCgwM1M6dO637t27dqg4dOsjd3V01atTQ6NGjdfny5Ztms1gs8vHxka+vr+6//35NmjRJ+/bts64Enjt3rurUqSMXFxfVq1dPX3zxhc3xwcHBqlmzplxdXeXn56fRo0db9/399gh33HGHJKlPnz6yWCzW13+/PcJ3330nNzc3XbhwweYco0ePVseOHQvsOlu2bKmxY8fq5MmTOnz4sLXPzcZj48aNGjJkiBISEqwrdoODgyVJKSkpmjBhgm6//XZ5eHiodevW2rhx403zAAAAAABQ0lC0BVAmODg46IMPPtC+ffv02Wef6ccff9SECROy7T9w4EBVr15dO3bsUFRUlF5++WU5OztLkvbu3auuXbvqkUce0S+//KLw8HBFRkZq1KhRucrk7u4uSUpNTVVERIReeOEFvfjii9q3b5+GDx+uIUOGaMOGDZKkr776Su+9957mz5+vo0ePatWqVWrcuHGW77tjxw5JUmhoqOLi4qyv/65Tp06qWLGiVqxYYW1LT0/XsmXLNHDgwAK7zgsXLmjx4sWSZP36STcfj7Zt22r27NnWFbtxcXEaP368JGnIkCH66aeftHTpUv3yyy/q16+fHnroIR09ejTHmQAAAAAAKPYMAJQSTz31lHF0dDQeHh7WrW/fvln2XbZsmalcubL1dWhoqPHy8rK+rlChglm0aFGWxz755JPmmWeesWnbsmWLcXBwMFeuXMnymBvf/7fffjP33HOPqV69uklOTjZt27Y1Tz/9tM0x/fr1M927dzfGGDNz5kwTEBBgUlJSsnx/f39/895771lfSzIRERE2fSZNmmSaNm1qfT169GjzwAMPWF9/9913xsXFxZw7dy5f1ynJeHh4mHLlyhlJRpLp1atXlv2vu9V4GGPMsWPHjMViMadOnbJpf/DBB80rr7xy0/cHAAAAAKAkcbJvyRgACtb999+vuXPnWl97eHhIkjZs2KC3335bBw4cUGJiotLS0nT16lVdvnzZ2ufvxo0bp2HDhumLL75Qp06d1K9fP9WpU0eSFBUVpWPHjiksLMza3xijjIwMxcTEqEGDBllmS0hIUPny5WWMUVJSklq0aKGVK1fKxcVFBw8etHmQmCS1a9dO77//viSpX79+mj17tmrXrq2HHnpI3bt3V8+ePeXklPc/xgcOHKg2bdrojz/+kJ+fn8LCwtS9e3fddttt+brOChUqaNeuXUpLS9OmTZs0Y8YMzZs3z6ZPbsdDknbt2iVjjAICAmzak5OTi+RevQAAAAAAFBWKtgBKFQ8PD9155502bSdPnlT37t01YsQI/fvf/1alSpUUGRmpoUOHKjU1Ncv3CQ4O1uOPP641a9bo22+/1aRJk7R06VL16dNHGRkZGj58uM09Za+rWbNmttmuFzMdHBzk7e2dqThpsVhsXhtjrG01atTQ4cOHtW7dOv3www8aOXKkZsyYoU2bNtncdiA37r77btWpU0dLly7Vs88+q4iICIWGhlr35/U6HRwcrGNQv359xcfHKygoSJs3b5aUt/G4nsfR0VFRUVFydHS02Ve+fPlcXTsAAAAAAMUZRVsApd7OnTuVlpammTNnysHh2q28ly1bdsvjAgICFBAQoLFjx2rAgAEKDQ1Vnz591KJFC+3fvz9TcfhW/l7MvFGDBg0UGRmpQYMGWdu2bt1qs5rV3d1dvXr1Uq9evfTcc8+pfv362rt3r1q0aJHp/ZydnZWenn7LTI8//rjCwsJUvXp1OTg4qEePHtZ9eb3OG40dO1azZs1SRESE+vTpk6PxcHFxyZS/efPmSk9P1+nTp9W+fft8ZQIAAAAAoDjjQWQASr06deooLS1NH374oY4fP64vvvgi06/r/92VK1c0atQobdy4USdPntRPP/2kHTt2WAuoL730krZt26bnnntOu3fv1tGjR/XNN9/o+eefz3PGf/3rX1q0aJHmzZuno0ePatasWVq5cqX1AVyLFi3SggULtG/fPus1uLu7y9/fP8v3u+OOO7R+/XrFx8fr/Pnz2Z534MCB2rVrl9566y317dtXbm5u1n0FdZ2enp4aNmyYJk2aJGNMjsbjjjvu0KVLl7R+/XqdOXNGSUlJCggI0MCBAzVo0CCtXLlSMTEx2rFjh6ZPn661a9fmKhMAAAAAAMUZRVsApV6zZs00a9YsTZ8+XY0aNVJYWJimTp2abX9HR0edPXtWgwYNUkBAgPr3769u3bpp8uTJkqQmTZpo06ZNOnr0qNq3b6/mzZvr9ddfl6+vb54z9u7dW++//75mzJihhg0bav78+QoNDdV9990nSapYsaI++eQTtWvXTk2aNNH69eu1evXqbO/lOnPmTK1bt041atRQ8+bNsz1v3bp11apVK/3yyy8aOHCgzb6CvM4XXnhBBw8e1PLly3M0Hm3bttWIESMUFBSkqlWr6p133pEkhYaGatCgQXrxxRdVr1499erVS9u3b1eNGjVynQkAAAAAgOLKYowx9g4BAAAAAAAAALiGlbYAAAAAAAAAUIxQtAUAAAAAAACAYoSiLQAAAAAAAAAUIxRtAQAAAAAAAKAYoWgLAAAAAAAAAMUIRVsAAAAAAAAAKEYo2gIAAAAAAABAMULRFgAAAAAAAACKEYq2AAAAAAAAAFCMULQFAAAAAAAAgGKEoi0AAAAAAAAAFCMUbQEAAAAAAACgGPl/46a2yHqdSbAAAAAASUVORK5CYII=",
      "text/plain": [
       "<Figure size 1400x600 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import csv\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "from sklearn.metrics import roc_curve, auc\n",
    "\n",
    "# Step 1: Extract molecule ID and RMSD from the SDF file and save to CSV\n",
    "def extract_id_rmsd_from_sdf(sdf_file, output_csv_file):\n",
    "    with open(sdf_file, 'r') as infile, open(output_csv_file, 'w', newline='') as csvfile:\n",
    "        csv_writer = csv.writer(csvfile)\n",
    "        csv_writer.writerow(['ID', 'RMSD'])\n",
    "        \n",
    "        current_id = None\n",
    "        rmsd_value = None\n",
    "\n",
    "        for line in infile:\n",
    "            line = line.strip()\n",
    "\n",
    "            if line and not line.startswith('>') and current_id is None:\n",
    "                current_id = line  # Assume this is the molecule ID or name\n",
    "\n",
    "            elif line.startswith(\"> <rmsd>\"):\n",
    "                rmsd_value = infile.readline().strip()\n",
    "\n",
    "            elif line == \"$$$$\":\n",
    "                if current_id and rmsd_value:\n",
    "                    csv_writer.writerow([current_id, rmsd_value])\n",
    "                current_id = None\n",
    "                rmsd_value = None\n",
    "\n",
    "    print(f\"Extraction complete! Data saved to {output_csv_file}\")\n",
    "\n",
    "# Step 2: Perform data analysis and visualization (Top 10%)\n",
    "def analyze_rmsd_data(all_molecules_file, extracted_rmsd_file):\n",
    "    # Load all molecules (before screening)\n",
    "    all_molecules = pd.read_csv(all_molecules_file)\n",
    "\n",
    "    # Load hits (after screening)\n",
    "    hits = pd.read_csv(extracted_rmsd_file)\n",
    "\n",
    "    # Merge hits with all molecules to get the 'Status' for each hit\n",
    "    merged_hits = hits.merge(all_molecules, on='ID')\n",
    "\n",
    "    # Convert RMSD to float if needed\n",
    "    merged_hits['RMSD'] = pd.to_numeric(merged_hits['RMSD'], errors='coerce')\n",
    "    merged_hits = merged_hits.dropna(subset=['RMSD'])\n",
    "\n",
    "    # Sort hits by RMSD values (assuming lower RMSD is better)\n",
    "    sorted_hits = merged_hits.sort_values(by='RMSD')\n",
    "\n",
    "    # Determine the top 10% of the compounds based on RMSD\n",
    "    total_molecules = len(all_molecules)\n",
    "    top_10_percent = max(1, int(0.10 * total_molecules))  # Ensure at least 1 compound is selected\n",
    "    top_hits = sorted_hits.head(top_10_percent)\n",
    "\n",
    "    # Extract the true labels and scores for the top 10% hits\n",
    "    y_true_top = top_hits['Status']\n",
    "    y_scores_top = top_hits['RMSD']\n",
    "\n",
    "    # Calculate the ROC curve using the top 10% hits\n",
    "    fpr_top, tpr_top, thresholds_top = roc_curve(y_true_top, -y_scores_top)  # Using negative RMSD because lower is better\n",
    "    roc_auc_top = auc(fpr_top, tpr_top)\n",
    "\n",
    "    # Calculate Enrichment Factor (EF) for the top 10%\n",
    "    num_actives_total = all_molecules['Status'].sum()\n",
    "    num_actives_top = top_hits['Status'].sum()\n",
    "\n",
    "    if num_actives_total > 0 and top_10_percent > 0:\n",
    "        ef_10_percent = (num_actives_top / top_10_percent) / (num_actives_total / total_molecules)\n",
    "    else:\n",
    "        ef_10_percent = float('nan')  # Handle edge case if no actives are present\n",
    "\n",
    "    # Plot the ROC curve and EF\n",
    "    plt.figure(figsize=(14, 6))\n",
    "\n",
    "    # Subplot 1: ROC Curve for Top 10%\n",
    "    plt.subplot(1, 2, 1)\n",
    "    plt.plot(fpr_top, tpr_top, color='darkorange', lw=2, label=f'10% ROC curve (AUC = {roc_auc_top:.2f})')\n",
    "    plt.plot([0, 1], [0, 1], color='navy', lw=2, linestyle='--')\n",
    "    plt.xlim([0.0, 1.0])\n",
    "    plt.ylim([0.0, 1.0])\n",
    "    plt.xlabel('False Positive Rate')\n",
    "    plt.ylabel('True Positive Rate')\n",
    "    plt.title('Top 10% ROC Curve')\n",
    "    plt.legend(loc=\"lower right\")\n",
    "\n",
    "    # Subplot 2: Enrichment Factor\n",
    "    plt.subplot(1, 2, 2)\n",
    "    plt.bar(['Top 10%'], [ef_10_percent], color='blue')\n",
    "    plt.ylim(0, max(ef_10_percent, 1) + 1)\n",
    "    plt.ylabel('Enrichment Factor')\n",
    "    plt.title('Enrichment Factor at Top 10%')\n",
    "    for i, v in enumerate([ef_10_percent]):\n",
    "        plt.text(i, v + 0.05, f'{v:.2f}', ha='center', va='bottom')\n",
    "\n",
    "    plt.tight_layout()\n",
    "    plt.show()\n",
    "\n",
    "# Step 3: Specify input/output file names and run both extraction and analysis\n",
    "input_sdf_file = 'query_results.sdf'  # Replace with your SDF file name\n",
    "extracted_rmsd_csv_file = 'extracted_rmsd_data.csv'  # Output CSV file to save the extracted data\n",
    "all_molecules_file = 'All_MoleculesFinal.csv'  # CSV file containing all molecules with their Status\n",
    "\n",
    "# Run the extraction function\n",
    "extract_id_rmsd_from_sdf(input_sdf_file, extracted_rmsd_csv_file)\n",
    "\n",
    "# Run the analysis function\n",
    "analyze_rmsd_data(all_molecules_file, extracted_rmsd_csv_file)\n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
